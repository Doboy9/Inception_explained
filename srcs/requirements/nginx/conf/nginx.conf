events{
	worker_connections 10;
}

http{
	include /etc/nginx/mime.types;
	default_type  application/octet-stream;
	
	# /etc/nginx/mime.types: This file specifies MIME types that NGINX should use when serving files
	# Using application/octet-stream as the default type is a security measure. If a specific MIME type isn’t found, NGINX doesn’t attempt to guess a potentially incorrect type that could lead to unintended behavior (such as executing code).

	server{
		listen 443 ssl;
		# standard port for HTTPS connections
		server_name dboire.42.fr;
		# the server is configured to respond to requests for dboire.42.fr
		ssl_certificate /etc/nginx/ssl/inception.crt;
		# path to the SSL certificate file
		ssl_certificate_key /etc/nginx/ssl/inception.key;
		# path to the SSL private key file
		ssl_protocols TLSv1.2 TLSv1.3;
		# which SSL/TLS protocols are supported by the server
		root /var/www/html;
		# This directory is where the server will search for content to serve to clients when they request resources like HTML files, images, or scripts.
		index index.php index.html;
		# default file(s) to be served when a directory is requested

		location / {
			try_files $uri $uri/ =404;
			# $uri -> Tries to serve the request as a file with the exact URI requested.
			# $uri/ -> If the first check fails, it then tries to serve the URI as a directory
			# =404 -> If neither of the above checks succeeds, it will return a 404 Not Found error
		}
		# This block handles the root location (/), which means it applies to all requests unless a more specific location block matches.

		location ~ \.php$ {
			include snippets/fastcgi-php.conf;
			# includes a configuration snippet that contains settings necessary for handling PHP files with FastCGI.
			fastcgi_pass wp-php:9000;
			# This directive tells NGINX to pass PHP requests to a FastCGI server at the address wp-php on port 9000
			include fastcgi_params;
			# This directive includes additional parameters required by FastCGI
		}
		# tells NGINX how to handle PHP files by forwarding the request to a PHP processor, typically through FastCGI, which is a protocol used to interface web servers with application servers.
	}
}